openapi: 3.0.3
info:
  title: Taskmaster API
  description: API for managing user tasks with OAuth authentication in Taskmaster
  version: 1.0.0
  contact:
    name: API Support
  license:
    name: MIT

servers:
  - url: https://taskmaster-speakeasyapi.vercel.app/api
    description: Deployed server

security:
  - oauthToken: []

components:
  securitySchemes:
    oauthToken:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /api/oauth2/authorize
          tokenUrl: /api/oauth2/token
          scopes:
            - openid
            - profile
            - email

  schemas:
    TaskStatus:
      type: string
      enum:
        - backlog
        - triage
        - todo
        - in_progress
        - done
        - canceled
      description: Current status of the task
      example: 'todo'

    DependencyType:
      type: string
      enum:
        - blocks
        - relates_to
        - duplicates
      description: Type of dependency relationship between tasks
      example: 'blocks'

    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the task
          example: '550e8400-e29b-41d4-a716-446655440000'
        title:
          type: string
          maxLength: 255
          description: Title of the task
          example: 'Complete project documentation'
        description:
          type: string
          maxLength: 500
          description: Detailed description of the task
          example: 'Write comprehensive API documentation including examples'
        created_by:
          type: string
          description: ID of the user who created this task
          example: 'user_123456'
        project_id:
          type: string
          format: uuid
          description: ID of the project this task belongs to (optional)
          example: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
        status:
          $ref: '#/components/schemas/TaskStatus'
        created_at:
          type: string
          format: date-time
          description: When the task was created
          example: '2024-01-15T10:30:00Z'
        updated_at:
          type: string
          format: date-time
          description: When the task was last updated
          example: '2024-01-15T14:45:00Z'
      required:
        - id
        - title
        - description
        - created_by

    TaskDependency:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the task dependency
          example: '780f9600-f39c-52e5-b827-557766551122'
        task_id:
          type: string
          format: uuid
          description: ID of the task that has the dependency
          example: '550e8400-e29b-41d4-a716-446655440000'
        depends_on_task_id:
          type: string
          format: uuid
          description: ID of the task that this task depends on
          example: '660f9500-f39c-52e5-b827-557766551111'
        dependency_type:
          $ref: '#/components/schemas/DependencyType'
        created_by:
          type: string
          description: ID of the user who created this dependency
          example: 'user_123456'
        created_at:
          type: string
          format: date-time
          description: When the dependency was created
          example: '2024-01-15T11:30:00Z'
        updated_at:
          type: string
          format: date-time
          description: When the dependency was last updated
          example: '2024-01-15T11:30:00Z'
        dependsOnTask:
          type: object
          description: Information about the task that this task depends on
          properties:
            id:
              type: string
              format: uuid
              example: '660f9500-f39c-52e5-b827-557766551111'
            title:
              type: string
              example: 'Setup database schema'
            description:
              type: string
              example: 'Create all necessary database tables and relationships'
            status:
              $ref: '#/components/schemas/TaskStatus'
      required:
        - id
        - task_id
        - depends_on_task_id
        - dependency_type
        - created_by

    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the project
          example: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
        name:
          type: string
          maxLength: 255
          description: Name of the project
          example: 'Website Redesign'
        description:
          type: string
          maxLength: 500
          description: Detailed description of the project
          example: 'Complete redesign of the company website with modern UI/UX'
        created_by:
          type: string
          description: ID of the user who created this project
          example: 'user_123456'
        created_at:
          type: string
          format: date-time
          description: When the project was created
          example: '2024-01-15T09:00:00Z'
        updated_at:
          type: string
          format: date-time
          description: When the project was last updated
          example: '2024-01-15T09:00:00Z'
      required:
        - id
        - name
        - description

    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: 'Unauthorized access'
        code:
          type: integer
          description: HTTP status code
          example: 401

paths:
  /tasks:
    post:
      operationId: createTask
      summary: Create a new task
      description: Creates a new task for the authenticated user in Taskmaster
      security:
        - oauthToken: []
      requestBody:
        description: Task data for creation
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: Title of the task
                  example: 'Complete project documentation'
                description:
                  type: string
                  minLength: 1
                  maxLength: 500
                  description: Detailed description of the task
                  example: 'Write comprehensive API documentation including examples'
                project_id:
                  type: string
                  format: uuid
                  description: ID of the project this task belongs to (optional)
                  example: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
                status:
                  $ref: '#/components/schemas/TaskStatus'
              required:
                - title
                - description
            examples:
              basic_task:
                summary: Basic task creation
                value:
                  title: 'Complete project setup'
                  description: 'Initialize the project with all necessary dependencies'
              task_with_project:
                summary: Task with project assignment
                value:
                  title: 'Write comprehensive tests'
                  description: 'Add test coverage for all endpoints'
                  project_id: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
                  status: 'todo'
      responses:
        '201':
          description: Task successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              example:
                id: '550e8400-e29b-41d4-a716-446655440000'
                title: 'Complete project documentation'
                description: 'Write comprehensive API documentation including examples'
                created_by: 'user_123456'
                project_id: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
                status: 'todo'
                created_at: '2024-01-15T10:30:00Z'
                updated_at: '2024-01-15T10:30:00Z'
        '400':
          description: Bad Request - Invalid request data, JSON format, or token format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Invalid request data'
                  errors:
                    type: object
                    description: Field-specific validation errors
                    example:
                      title: ['Title is required']
                      description: ['Description must be 500 characters or less']
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '500':
          description: Internal Server Error - Failed to create task
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Failed to create task'
    get:
      operationId: getTasks
      summary: Get all tasks for authenticated user
      description: Retrieves all tasks belonging to the authenticated user in Taskmaster. Optionally filter by project.
      security:
        - oauthToken: []
      parameters:
        - name: project_id
          in: query
          required: false
          description: Filter tasks by project ID
          schema:
            type: string
            format: uuid
            example: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
      responses:
        '200':
          description: Successfully retrieved tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
              example:
                - id: '550e8400-e29b-41d4-a716-446655440000'
                  title: 'Complete project setup'
                  description: 'Initialize the project with all necessary dependencies'
                  created_by: 'user_123456'
                  project_id: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
                  status: 'todo'
                  created_at: '2024-01-15T10:30:00Z'
                  updated_at: '2024-01-15T10:30:00Z'
                - id: '660f9500-f39c-52e5-b827-557766551111'
                  title: 'Write comprehensive tests'
                  description: 'Add test coverage for all Taskmaster endpoints'
                  created_by: 'user_123456'
                  project_id: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
                  status: 'in_progress'
                  created_at: '2024-01-15T11:00:00Z'
                  updated_at: '2024-01-15T14:30:00Z'
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '400':
          description: Bad Request - Invalid token format
          content:
            text/plain:
              schema:
                type: string
                example: 'Invalid token'

  /tasks/{id}:
    put:
      operationId: updateTask
      summary: Update a specific task
      description: Updates a task by ID for the authenticated user in Taskmaster. All fields are optional for partial updates.
      security:
        - oauthToken: []
      parameters:
        - name: id
          in: path
          required: true
          description: The UUID of the task to update
          schema:
            type: string
            format: uuid
            example: '550e8400-e29b-41d4-a716-446655440000'
      requestBody:
        description: Task fields to update (all optional)
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  maxLength: 255
                  description: Updated title of the task
                  example: 'Updated task title'
                description:
                  type: string
                  maxLength: 500
                  description: Updated description of the task
                  example: 'Updated task description with more details'
                status:
                  $ref: '#/components/schemas/TaskStatus'
                project_id:
                  type: string
                  format: uuid
                  description: Updated project ID for the task
                  example: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
            examples:
              partial_update:
                summary: Partial update example
                value:
                  status: 'in_progress'
              full_update:
                summary: Full update example
                value:
                  title: 'Complete project documentation'
                  description: 'Write comprehensive API documentation with examples'
                  status: 'in_progress'
                  project_id: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
      responses:
        '200':
          description: Task successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              example:
                id: '550e8400-e29b-41d4-a716-446655440000'
                title: 'Complete project documentation'
                description: 'Write comprehensive API documentation with examples'
                created_by: 'user_123456'
                project_id: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
                status: 'in_progress'
                created_at: '2024-01-15T10:30:00Z'
                updated_at: '2024-01-15T15:45:00Z'
        '400':
          description: Bad Request - Invalid request data, token format, or no fields provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Invalid request data'
                  errors:
                    type: object
                    description: Field-specific validation errors
                    example:
                      status: ['Invalid enum value. Expected backlog | triage | todo | in_progress | done | canceled']
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '404':
          description: Task not found or not owned by authenticated user
          content:
            text/plain:
              schema:
                type: string
                example: 'Not Found'
    delete:
      operationId: deleteTask
      summary: Delete a specific task
      description: Deletes a task by ID for the authenticated user in Taskmaster
      security:
        - oauthToken: []
      parameters:
        - name: id
          in: path
          required: true
          description: The UUID of the task to delete
          schema:
            type: string
            format: uuid
            example: '550e8400-e29b-41d4-a716-446655440000'
      responses:
        '204':
          description: Task successfully deleted
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '400':
          description: Bad Request - Invalid token format
          content:
            text/plain:
              schema:
                type: string
                example: 'Invalid token'
        '404':
          description: Task not found or not owned by authenticated user
          content:
            text/plain:
              schema:
                type: string
                example: 'Not Found'

  /tasks/{task_id}/dependencies:
    get:
      operationId: getTaskDependencies
      summary: Get all dependencies for a specific task
      description: Retrieves all dependencies for a specific task belonging to the authenticated user in Taskmaster. Optionally filter by dependency type.
      security:
        - oauthToken: []
      parameters:
        - name: task_id
          in: path
          required: true
          description: The UUID of the task to get dependencies for
          schema:
            type: string
            format: uuid
            example: '550e8400-e29b-41d4-a716-446655440000'
        - name: dependency_type
          in: query
          required: false
          description: Filter dependencies by type
          schema:
            $ref: '#/components/schemas/DependencyType'
      responses:
        '200':
          description: Successfully retrieved task dependencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDependency'
              example:
                - id: '780f9600-f39c-52e5-b827-557766551122'
                  task_id: '550e8400-e29b-41d4-a716-446655440000'
                  depends_on_task_id: '660f9500-f39c-52e5-b827-557766551111'
                  dependency_type: 'blocks'
                  created_by: 'user_123456'
                  created_at: '2024-01-15T11:30:00Z'
                  updated_at: '2024-01-15T11:30:00Z'
                  dependsOnTask:
                    id: '660f9500-f39c-52e5-b827-557766551111'
                    title: 'Setup database schema'
                    description: 'Create all necessary database tables and relationships'
                    status: 'done'
        '400':
          description: Bad Request - Invalid task_id format or query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'task_id must be a valid UUID'
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '404':
          description: Task not found or not owned by authenticated user
          content:
            text/plain:
              schema:
                type: string
                example: 'Not Found'
    post:
      operationId: createTaskDependency
      summary: Create a new task dependency
      description: Creates a new dependency relationship between two tasks for the authenticated user in Taskmaster
      security:
        - oauthToken: []
      parameters:
        - name: task_id
          in: path
          required: true
          description: The UUID of the task that will have the dependency
          schema:
            type: string
            format: uuid
            example: '550e8400-e29b-41d4-a716-446655440000'
      requestBody:
        description: Task dependency data for creation
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                depends_on_task_id:
                  type: string
                  format: uuid
                  description: ID of the task that this task depends on
                  example: '660f9500-f39c-52e5-b827-557766551111'
                dependency_type:
                  $ref: '#/components/schemas/DependencyType'
              required:
                - depends_on_task_id
                - dependency_type
            examples:
              blocks_dependency:
                summary: Create blocking dependency
                value:
                  depends_on_task_id: '660f9500-f39c-52e5-b827-557766551111'
                  dependency_type: 'blocks'
              relates_to_dependency:
                summary: Create related dependency
                value:
                  depends_on_task_id: '770g0600-g40d-63f6-c938-668877773333'
                  dependency_type: 'relates_to'
      responses:
        '201':
          description: Task dependency successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDependency'
              example:
                id: '780f9600-f39c-52e5-b827-557766551122'
                task_id: '550e8400-e29b-41d4-a716-446655440000'
                depends_on_task_id: '660f9500-f39c-52e5-b827-557766551111'
                dependency_type: 'blocks'
                created_by: 'user_123456'
                created_at: '2024-01-15T11:30:00Z'
                updated_at: '2024-01-15T11:30:00Z'
                dependsOnTask:
                  id: '660f9500-f39c-52e5-b827-557766551111'
                  title: 'Setup database schema'
                  description: 'Create all necessary database tables and relationships'
                  status: 'done'
        '400':
          description: Bad Request - Invalid request data, self-referencing dependency, or invalid UUIDs
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'A task cannot depend on itself'
                  errors:
                    type: object
                    description: Field-specific validation errors
                    example:
                      depends_on_task_id: ['depends_on_task_id must be a valid UUID']
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '404':
          description: One or both tasks not found or not owned by user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'One or both tasks not found or not owned by user'
        '409':
          description: Conflict - Dependency already exists between these tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Dependency already exists between these tasks'
        '500':
          description: Internal Server Error - Failed to create task dependency
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Failed to create task dependency'

  /tasks/{task_id}/dependencies/{dependency_id}:
    put:
      operationId: updateTaskDependency
      summary: Update a specific task dependency
      description: Updates the dependency type for a specific task dependency belonging to the authenticated user in Taskmaster
      security:
        - oauthToken: []
      parameters:
        - name: task_id
          in: path
          required: true
          description: The UUID of the task that has the dependency
          schema:
            type: string
            format: uuid
            example: '550e8400-e29b-41d4-a716-446655440000'
        - name: dependency_id
          in: path
          required: true
          description: The UUID of the dependency to update
          schema:
            type: string
            format: uuid
            example: '780f9600-f39c-52e5-b827-557766551122'
      requestBody:
        description: Task dependency fields to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dependency_type:
                  $ref: '#/components/schemas/DependencyType'
              required:
                - dependency_type
            examples:
              change_to_relates:
                summary: Change dependency type to relates_to
                value:
                  dependency_type: 'relates_to'
      responses:
        '200':
          description: Task dependency successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDependency'
              example:
                id: '780f9600-f39c-52e5-b827-557766551122'
                task_id: '550e8400-e29b-41d4-a716-446655440000'
                depends_on_task_id: '660f9500-f39c-52e5-b827-557766551111'
                dependency_type: 'relates_to'
                created_by: 'user_123456'
                created_at: '2024-01-15T11:30:00Z'
                updated_at: '2024-01-15T15:45:00Z'
                dependsOnTask:
                  id: '660f9500-f39c-52e5-b827-557766551111'
                  title: 'Setup database schema'
                  description: 'Create all necessary database tables and relationships'
                  status: 'done'
        '400':
          description: Bad Request - Invalid request data or invalid UUIDs
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Invalid request data'
                  errors:
                    type: object
                    description: Field-specific validation errors
                    example:
                      dependency_type: ['dependency_type must be one of: blocks, relates_to, duplicates']
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '404':
          description: Task or dependency not found or not owned by authenticated user
          content:
            text/plain:
              schema:
                type: string
                example: 'Not Found'
        '500':
          description: Internal Server Error - Failed to update task dependency
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Failed to update task dependency'
    delete:
      operationId: deleteTaskDependency
      summary: Delete a specific task dependency
      description: Deletes a specific task dependency belonging to the authenticated user in Taskmaster
      security:
        - oauthToken: []
      parameters:
        - name: task_id
          in: path
          required: true
          description: The UUID of the task that has the dependency
          schema:
            type: string
            format: uuid
            example: '550e8400-e29b-41d4-a716-446655440000'
        - name: dependency_id
          in: path
          required: true
          description: The UUID of the dependency to delete
          schema:
            type: string
            format: uuid
            example: '780f9600-f39c-52e5-b827-557766551122'
      responses:
        '204':
          description: Task dependency successfully deleted
        '400':
          description: Bad Request - Invalid UUIDs
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'task_id and dependency_id must be valid UUIDs'
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '404':
          description: Task or dependency not found or not owned by authenticated user
          content:
            text/plain:
              schema:
                type: string
                example: 'Not Found'
        '500':
          description: Internal Server Error - Failed to delete task dependency
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Failed to delete task dependency'

  /projects:
    post:
      operationId: createProject
      summary: Create a new project
      description: Creates a new project for the authenticated user in Taskmaster
      security:
        - oauthToken: []
      requestBody:
        description: Project data for creation
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  description: Name of the project
                  example: 'Website Redesign'
                description:
                  type: string
                  minLength: 1
                  maxLength: 500
                  description: Detailed description of the project
                  example: 'Complete redesign of the company website with modern UI/UX'
              required:
                - name
                - description
            examples:
              basic_project:
                summary: Basic project creation
                value:
                  name: 'Mobile App Development'
                  description: 'Build a cross-platform mobile application for Taskmaster'
      responses:
        '201':
          description: Project successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              example:
                id: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
                name: 'Website Redesign'
                description: 'Complete redesign of the company website with modern UI/UX'
                created_by: 'user_123456'
                created_at: '2024-01-15T09:00:00Z'
                updated_at: '2024-01-15T09:00:00Z'
        '400':
          description: Bad Request - Invalid request data, JSON format, or token format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Invalid request data'
                  errors:
                    type: object
                    description: Field-specific validation errors
                    example:
                      name: ['Name is required']
                      description: ['Description must be 500 characters or less']
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '500':
          description: Internal Server Error - Failed to create project
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Failed to create project'
    get:
      operationId: getProjects
      summary: Get all projects for authenticated user
      description: Retrieves all projects belonging to the authenticated user in Taskmaster
      security:
        - oauthToken: []
      responses:
        '200':
          description: Successfully retrieved projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
              example:
                - id: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
                  name: 'Website Redesign'
                  description: 'Complete redesign of the company website with modern UI/UX'
                  created_by: 'user_123456'
                  created_at: '2024-01-15T09:00:00Z'
                  updated_at: '2024-01-15T09:00:00Z'
                - id: '7cb8c920-aeac-22f2-91c5-668877662222'
                  name: 'Mobile App Development'
                  description: 'Build a cross-platform mobile application for Taskmaster'
                  created_by: 'user_123456'
                  created_at: '2024-01-15T10:00:00Z'
                  updated_at: '2024-01-15T11:30:00Z'
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '400':
          description: Bad Request - Invalid token format
          content:
            text/plain:
              schema:
                type: string
                example: 'Invalid token'

  /projects/{id}:
    delete:
      operationId: deleteProject
      summary: Delete a specific project
      description: Deletes a project by ID for the authenticated user in Taskmaster. Associated tasks will be automatically deleted due to cascade delete.
      security:
        - oauthToken: []
      parameters:
        - name: id
          in: path
          required: true
          description: The UUID of the project to delete
          schema:
            type: string
            format: uuid
            example: '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
      responses:
        '204':
          description: Project successfully deleted
        '401':
          description: Unauthorized - Invalid or missing authentication token
          content:
            text/plain:
              schema:
                type: string
                example: 'Unauthorized'
        '400':
          description: Bad Request - Invalid token format
          content:
            text/plain:
              schema:
                type: string
                example: 'Invalid token'
        '404':
          description: Project not found or not owned by authenticated user
          content:
            text/plain:
              schema:
                type: string
                example: 'Not Found'

tags:
  - name: tasks
    description: Operations related to task management in Taskmaster
  - name: projects
    description: Operations related to project management in Taskmaster
